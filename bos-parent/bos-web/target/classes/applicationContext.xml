<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:soap="http://cxf.apache.org/bindings/soap"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://cxf.apache.org/bindings/soap 
						http://cxf.apache.org/schemas/configuration/soap.xsd
						http://cxf.apache.org/jaxws 
						http://cxf.apache.org/schemas/jaxws.xsd">
	
	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
				
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- 配置LocalSessionFactoryBean，spring提供的用于整合hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入hibernate相关的属性配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<!-- 注入hibernate的映射文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:cn/itcast/bos/entity/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="cn.itcast.bos"/>
	
	<!-- 支持spring注解 -->
	<context:annotation-config/>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<jaxws:client 
	   id="client"
	   address="http://localhost:8080/crm/service/customer"
	   serviceClass="cn.itcast.bos.utils.ICustomerService">
	</jaxws:client>
	
	<!-- 配置web.xml中DelegatingFilterProxy过滤器所对应的filter-name对应的Bean -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login.jsp"/>
	    <property name="successUrl" value="/index.jsp"/>
	    <property name="unauthorizedUrl" value="/unauthorized.html"/>
	    <property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/js/** = anon
				/images/** = anon
				/validatecode.jsp* = anon
				/login.jsp = anon
				/UserAction_login.action = anon
	            /page_base_staff.action = perms["staff-list"]
				/* = authc
			</value>
		</property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	     <property name="realm" ref="bosRealm"></property>
	     <property name="cacheManager" ref="cacheManager"></property>
	</bean>
	<bean id="bosRealm" class="cn.itcast.bos.realm.BosRealm"></bean>
   	<!-- 开启shiro框架注解支持 -->
	<bean id="defaultAdvisorAutoProxyCreator" 
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
			<!-- 必须使用cglib方式为Action对象创建代理对象 -->
		<property name="proxyTargetClass" value="true"/>
	</bean>
    
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/>
    <!-- 使用ehcache缓存数据 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
         <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
    </bean>
    
    
    <!-- 配置自定义任务类 -->
     <bean id="myjob" class="cn.itcast.bos.quartz.MailJob">
         <property name="username" value="Maori_Lan@126.com"/>
         <!-- 此密码要填写邮箱授权码 -->
		 <property name="password" value="1787023692li"/>
		 <property name="smtpServer" value="smtp.126.com"/>
     </bean>
     
     <!-- 配置jobDetail -->
     <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
         <property name="targetObject" ref="myjob"/>
         <property name="targetMethod" value="execute"/>
     </bean>
     
     <!-- 配置触发器 -->
     <bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
         <property name="jobDetail" ref="jobDetail"/>
         <property name="cronExpression">
             <value>0 10,44 14 ? 3 sat</value>
         </property>
     </bean>
     
     <!-- 配置调度工厂 -->
     <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
         <property name="triggers">
            <list>
              <ref bean="myTrigger"/>
            </list>
         </property>
     </bean>
</beans>
